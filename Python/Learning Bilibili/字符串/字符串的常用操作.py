# 字符串的常见操作
# 首先是查找操作
"""
首先是index/rindex
index 会查找第一个符合条件的字符的位置
rindex 会查找最后一个符合条件的字符的位置
其次是find/rfind
find 会查找第一个符合条件的字符的位置
rfind 会查找最后一个符合条件的字符的位置
这边解释一下两者的区别
如果使用index查找，若出现想查找的字符没有出现的时候，就会报错valueerror
但是使用find查找，若出现想查找的字符没有出现的时候，就会返回-1数值
"""

# 其次是对于字符本身的操作
"""
upper       操作会将所有的字符都大写
lower       操作会将所有的字符都小写
swapcase    操作会将所有的字符大小写颠倒，也就是大写变成小写，小写变成大写
title       操作会将所有单词除了第一个字母都小小写并且把第一个字母大写
capitalize  操作会将第一个字符转化为大写，其余转化为小写
注意字符串是不可改变顺序的对象，所以上述操作会将字符串的 id 变成新的，也就是产生一个新字符串
"""

# 接下来是对字符串的对齐操作
"""
center
居中对齐，第一个参数指定宽度，第二个参数指定填充符，第二个参数是可选的，默认是空格，如果设置宽度小于实际宽度则会返回原字符串
ljust
左对齐第一个参数指定宽度，第二个参数指定填充符，第二个参数是可选的，默认是空格，如果设置宽度小于实际宽度则会返回原字符串
rjust
右对齐第一个参数指定宽度，第二个参数指定填充符，第二个参数是可选的，默认是空格，如果设置宽度小于实际宽度则会返回原字符串
zfill
右对齐，左边用0填充，该方法只接受一个参数，用于指定字符串的宽度，如果指定的宽度小于等于字符串的长度，则返回原字符串
下面是演示
"""
a = 'Hello Python'
print(a.center(30, '-'))
print(a.center(30))
print(a.ljust(30, '-'))
print(a.ljust(30))
print(a.rjust(30, '-'))
print(a.rjust(30))
print(a.zfill(30))
'''接下来是如果指定宽度小于要求长度的时候的表现'''
print(a.ljust(5, '-'))
print(a.center(5, '-'))
print(a.rjust(5, '-'))
'''这里需要注意如果使用zfill对齐一个带符号的数字将会保留符号到最前面'''
b = '-988'
print(b.zfill(10))

# 接下来是分割字符串的方式
"""
split
从字符串的左边开始分割，默认的分割符是空格，返回的是一个列表
可以通过 sep 来指定分割字符串的分隔符
可以通过参数maxsplit来限制最多的分割次数。如果达到了最高次数，剩余的字符串将会被分为单独一部分保留
rsplit
从字符串的右边开始分割，默认的分割符是空格，返回的是一个列表
可以通过 sep 来指定分割字符串的分隔符
可以通过参数maxsplit来限制最多的分割次数。如果达到了最高次数，剩余的字符串将会被分为单独一部分保留
"""
s = 'hello,world,python,i,love,nikolai'
a = s.split(sep=',', maxsplit=2)
print(a)

# 接下来是字符串的判断
"""
isidentifier    判断指定的字符串是否合法的标识符 包括数字 字母 下划线
isspace         判断指定的字符串是否全部有空白字符组成 包括回车 空格 水平制表符
isalpha         判断指定的字符串是否全部由字母组成
isdecimal       判断指定的字符串是否全部由十进制的数字组成
isnumeric       判断指定的字符串是否全部由数字组成
isalnum         判断指定字符串是否全部由字母和数字组成
"""

# 接下来是字符串的替换操作
"""
replace
第一个参数确定想要替换的目标，第二个参数确定想要替换的结果，可以通过第三个参数确定最大替换次数
join
将列表和元组的字符串合并为一个字符串
还可以将单个字符作为字符串的链接字符,实际上join就是链接的作用
"""
a = ('hello', 'world', 'python', 'good')
print(''.join(a))
print('|'.join(a))
print(' 00 '.join(a))
print('='.join('python'))
