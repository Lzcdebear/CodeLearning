whos 输出格式 类似py的type

help eig
会显示具体的用法
中间是空格

clear  删除所有变量

clc     clear command window 清理屏幕但是不删除变量

A = [1 2;3 4;]
矩阵定义使用 [ ]
同一行的元素之间使用 空格
元素之间使用 ；来分行

ones(3,3)  生成一个 3*3 全是 1 的矩阵

zero(3,3)  全是0

eye(3,3)  生成 3*3 的单位矩阵 只有主对角线为 1

转置可以使用 [ ]' 进行转置

间隔为一的等差数列
a = 1: 1: 10
从 第一个 开始间隔为 第二个数 直到数字小于等于 最后一个数字
第一个数字可以省略自动认为为从一开始

linspace(1, 10, 4)  输出 1 4 7 10
取一到十头尾定向，包括头尾输出n个数字， 呈现等差数列， 可能是无理的


索引

一行的索引
a(3)  a中的第三个数
a(3:6)  a中的第三个数到第六个数 包括第六个数字
a(6:end)  end就是代表最后一个数
a(1:2:end)  从第一个到最后一个步长为2 

矩阵索引
A=(1,;)  第一行所有列
A=(:,2)  所有行第二列
A=([1 2],:)  第一第二行所有列
A=(3)   第三个数字，从第一列开始数数
A=([2 3],[2 3])  二三行二三列

矩阵元素替换
A(1,5)=0
A(3,:)=0
A(4,3:end)


矩阵运算
A=[1 2;3 4;5 6]
B=[1 0;1 1]
A*B  乘法直接

求逆矩阵
A^-1
C=inv(A)
A*C=单位矩阵
矩阵的 -1 次方或者 inv

A.*B 对应的元素相乘  两个矩阵第一行第一列的元素相乘
加法不需要这样的语句
A./B 除法同样也是元素对应相乘

A^2 矩阵乘法相乘
A.^2 矩阵中的元素自己幂运算

sqrt(A) 平方根 对于每一个元素进行平方
A.^(1/2)

特征值为  eig

排序
sort函数
b=sort(a)
从小到大排序
从大到小排序  sort(a,'descend'
[b,I]=sort(a)
a 中取出 I 所包含的元素

矩阵排序
每一列排序
sort(A,1)  对于第一个方向排列，就是列排列
sort(A,2)  对于第二个方向排列，就是行排列

repmat(A,3,1)
将A矩阵拼成 三行一列 
A作为一个整体

imshow 图像化展示但是只支持0-1的矩阵
imshow(A,[])
自动将A中的数据按照比例变成 0-1 的数字
数值越小亮度越小


渐变的灰度的

meshgrid







